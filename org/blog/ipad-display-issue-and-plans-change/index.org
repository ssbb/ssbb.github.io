#+TITLE: iPad display issue and plans change
#+DATE: <2025-09-26 Fri>
#+OPTIONS: toc:nil
#+PROJECT: x61r

In [[file:../first-attempt-at-ipad-lcd-separation/index.org][previous post]] I mentioned that I ordered a few dead iPad displays to practice LCD separation. I recently received the first one and decided to test it before attempting separation... and it works! It's a completely functional display with just cracked glass. What a find for $9!

I decided not to destroy it immediately (yeah, I'm realistic about my LCD separation skills) and take some measurements instead. iPad displays don't have an onboard backlight driver, so I need to implement my own. This means I should know at least the LEDs' forward voltage and current per string.

I had prepared a breakout board for the backlight connector a while ago (back when I thought I wouldn't kill the first display), so I quickly assembled it and plugged it in.

[[file:setup-full.jpg][file:setup.jpg]]

Using a shunt resistor to measure current on one of the LED strings, I got about 57 mA peak PWM current and ~18.75V forward voltage per string. That's quite a lot of current, assuming it also has 18 LED strings - but maybe I measured something wrong?

Anyway, I started working on my adapter PCB and realized that this display uses *6 eDP lanes*... That's not really standard (the eDP spec allows for 1, 2, or 4 lanes), but Apple being Apple, they use their own chips and their own display - so why not. The problem is that this makes the display basically unusable elsewhere, since no normal CPU supports 6 eDP lanes.

I checked other iPad schematics I had on hand, and the 11-inch models use 4 lanes. The 12.9-inch models from 1st to 4th gen use 6 eDP lanes. The 5th gen uses 4 lanes, but it has a Mini-LED display, which means there's some custom protocol for backlight control. In theory, it's possible to reverse engineer the Mini-LED backlight protocol and convert a PWM signal into commands to set the brightness of each LED. In practice... probably not.

Not sure how I missed this earlier - I've looked at this display connector schematic hundreds of times - but here we are.

* What's next?
Unfortunately, there are basically no other 4:3 eDP panels in the 12–13 inch range with good resolution. However, there are a few MIPI panels with 4:3 and 7:5 aspect ratios:

- [[https://www.panelook.com/PPC100HB1-1_CSOT_12.1_Assembly_overview_68000.html][PPC100HB1-1]] - used in the Oppo Pad 3 Pro. 12.1-inch, 3000x2120 resolution, 7:5 ratio.
- [[https://www.panelook.com/LD123UX1-SMA1_LG_Display_12.3_Assembly_overview_26101.html][LD123UX1-SMA1]] - used in the HP Slate 12 Pro. 12.3-inch, 1600x1200 resolution, 4:3 ratio.
- [[https://www.panelook.com/TV127XUM-LZ0-D8P0_BOE_12.7_Assembly_overview_61062.html][TV127XUM-LZ0-D8P0]] - apparently used in the TECLAST ArtPad Pro tablet. 12.7-inch, 2176x1600 resolution. Marketed as 7:5, but it's actually closer to 4:3.

The only catch: these aren't eDP but MIPI panels, so I'll need a converter. There are a few on the market, and the best one seems to be the [[https://www.analogix.com/en/products/dp-mipi-converters/anx7580][ANX7580]] used in the Steam Deck. Sadly, you won't be able to get your hands on it unless you're a big corp or something. Pretty much all modern eDP-to-MIPI bridge chips aren't publicly available (believe me, I've tried really hard to find datasheets).

I've managed to get at least some documentation for the [[https://toshiba.semicon-storage.com/ap-en/semiconductor/product/interface-bridge-ics-for-mobile-peripheral-devices/display-interface-bridge-ics/detail.TC358860XBG.html][TC358860XBG]] from Toshiba, but it's still incomplete and missing some crucial information (detailed register documentation). It's not as modern as the ANX7580, but it should be enough to drive this panel at 90 Hz with 2:1 compression. We'll see if I can obtain the missing details somewhere.

Overall, MIPI panels are a bit trickier to work with since there's no standardized protocol. Each panel has its own command set, which usually isn't documented in the datasheet. However, since it's an Android-based devices, I should be able to extract the commands from the device tree.

To be honest, it's still questionable whether I'll be able to make it work. Because of that, I have a fallback plan: using a 12.3-inch 3:2 panel by LG — LP123QP1-SPA2. It's not as square as 4:3, but still better than 16:9, right? And it's a standard eDP panel that even fully matches the pinout of the BOE display used in the Framework 13 laptop, so it's basically plug-and-play (not sure if the connectors are interchangeable, but they look very similar). I plan to use it if I hit a dead end with MIPI converters and there's no other viable option. Maybe something will change in the future, and then I'll be able to redesign the A/B covers for a new panel.

Wish me luck!
